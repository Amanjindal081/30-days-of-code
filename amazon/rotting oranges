class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        queue<pair<int,int>>q;
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j]==2){
                    q.push({i,j});
                }
            }
        }
        int r = grid.size();
        int c =grid[0].size();
        int counter=0;
        q.push({-1,-1});
        while(q.size()>0){
            int x = q.front().first;
            int y = q.front().second;
            if(x==-1 && y==-1 && q.size()==1){
                break;
            }
            else if(x==-1 && y==-1 && q.size()>1){
                counter++;
                q.pop();
                q.push({-1,-1});

            }
            else{
                if((x-1)>=0 && grid[x-1][y]==1){
                    grid[x-1][y]=2;
                    q.push({x-1,y});
                }
                if((x+1)<r && grid[x+1][y]==1){
                    grid[x+1][y]=2;
                    q.push({x+1,y});
                }
                if((y-1)>=0 && grid[x][y-1]==1){
                    grid[x][y-1]=2;
                    q.push({x,y-1});
                }
                if((y+1)<c && grid[x][y+1]==1){
                    grid[x][y+1]=2;
                    q.push({x,y+1});
                }
                q.pop();
            }
        }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(grid[i][j]==1){
                    return -1;
                    break;
                }
            }
        }
        return counter;
    }
};

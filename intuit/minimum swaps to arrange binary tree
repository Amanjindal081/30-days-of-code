class Solution {
public:
    int minSwaps(vector<vector<int>>& grid) {
        int n =grid.size();
        int temp[n];
        for(int i=0;i<n;i++){
            int count=0;
            for(int j=n-1;j>=0;j--){
                if(grid[i][j]==0){
                    count++;
                }
                else{
                    break;
                }
            }
            temp[i]=count;
        }
        for(int i=0;i<n;i++){
            cout<<temp[i]<<" ";
        }
        int ans=0;
        for(int i=0;i<n;i++){
            int required = grid.size()-i-1;
            int k=i;
            while(k<grid.size() && temp[k]<required){
                k++;
            }
            if(k==grid.size()){
                return -1;
            }
            ans+=k-i;
            while(k>i){
                int t=temp[k];
                temp[k]=temp[k-1];
                temp[k-1]=t;
                k--;
            }
            
        }
        return ans;
    }
};
